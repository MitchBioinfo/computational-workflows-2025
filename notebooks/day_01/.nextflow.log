Sept.-29 11:51:02.501 [main] DEBUG nextflow.cli.Launcher - $> nextflow run nf-core/differentialabundance --outdir results#-profile test,docker --outdir results
Sept.-29 11:51:02.802 [main] DEBUG nextflow.cli.CmdRun - N E X T F L O W  ~  version 25.04.7
Sept.-29 11:51:02.946 [main] DEBUG nextflow.plugin.PluginsFacade - Setting up plugin manager > mode=prod; embedded=false; plugins-dir=/home/mitch/.nextflow/plugins; core-plugins: nf-amazon@2.15.0-patch1,nf-azure@1.16.0-patch1,nf-cloudcache@0.4.3,nf-codecommit@0.2.3,nf-console@1.2.1,nf-google@1.21.1,nf-k8s@1.0.0,nf-tower@1.11.4-patch1,nf-wave@1.12.1
Sept.-29 11:51:03.042 [main] INFO  o.pf4j.DefaultPluginStatusProvider - Enabled plugins: []
Sept.-29 11:51:03.046 [main] INFO  o.pf4j.DefaultPluginStatusProvider - Disabled plugins: []
Sept.-29 11:51:03.057 [main] INFO  org.pf4j.DefaultPluginManager - PF4J version 3.12.0 in 'deployment' mode
Sept.-29 11:51:03.104 [main] INFO  org.pf4j.AbstractPluginManager - No plugins
Sept.-29 11:51:03.156 [main] DEBUG nextflow.scm.ProviderConfig - Using SCM config path: /home/mitch/.nextflow/scm
Sept.-29 11:51:03.342 [main] DEBUG nextflow.scm.RepositoryFactory - Found Git repository result: [RepositoryFactory]
Sept.-29 11:51:03.395 [main] INFO  nextflow.cli.CmdRun - Pulling nf-core/differentialabundance ...
Sept.-29 11:51:03.421 [main] DEBUG nextflow.scm.RepositoryProvider - Request [credentials -:-] -> https://api.github.com/repos/nf-core/differentialabundance/contents/nextflow.config
Sept.-29 11:51:04.509 [main] DEBUG nextflow.scm.RepositoryProvider - Response status: 403 -- {"message":"API rate limit exceeded for 129.143.130.248. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)","documentation_url":"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting"}

Sept.-29 11:51:04.575 [main] WARN  nextflow.scm.AssetManager - Cannot read project manifest -- Cause: API rate limit exceeded -- Provide your GitHub user name and password to get a higher rate limit
nextflow.exception.RateLimitExceededException: API rate limit exceeded -- Provide your GitHub user name and password to get a higher rate limit
	at nextflow.scm.RepositoryProvider.checkResponse(RepositoryProvider.groovy:244)
	at nextflow.scm.RepositoryProvider.invoke(RepositoryProvider.groovy:193)
	at nextflow.scm.RepositoryProvider.memoizedMethodPriv$invokeAndParseResponseString(RepositoryProvider.groovy:301)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
	at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:645)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:628)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethodSafe(InvokerHelper.java:82)
	at nextflow.scm.RepositoryProvider$_closure3.doCall(RepositoryProvider.groovy)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
	at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:280)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)
	at groovy.lang.Closure.call(Closure.java:433)
	at org.codehaus.groovy.runtime.memoize.Memoize$MemoizeFunction.lambda$call$0(Memoize.java:137)
	at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:137)
	at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:113)
	at org.codehaus.groovy.runtime.memoize.Memoize$MemoizeFunction.call(Memoize.java:136)
	at groovy.lang.Closure.call(Closure.java:422)
	at nextflow.scm.RepositoryProvider.invokeAndParseResponse(RepositoryProvider.groovy)
	at nextflow.scm.GithubRepositoryProvider.readBytes(GithubRepositoryProvider.groovy:117)
	at nextflow.scm.RepositoryProvider.readText(RepositoryProvider.groovy:315)
	at nextflow.scm.AssetManager.getManifest0(AssetManager.groovy:448)
	at nextflow.scm.AssetManager.memoizedMethodPriv$getManifest(AssetManager.groovy:441)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
	at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:645)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:628)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethodSafe(InvokerHelper.java:82)
	at nextflow.scm.AssetManager$_closure2.doCall(AssetManager.groovy)
	at nextflow.scm.AssetManager$_closure2.doCall(AssetManager.groovy)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
	at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:280)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)
	at groovy.lang.Closure.call(Closure.java:433)
	at org.codehaus.groovy.runtime.memoize.Memoize$MemoizeFunction.lambda$call$0(Memoize.java:137)
	at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:137)
	at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:113)
	at org.codehaus.groovy.runtime.memoize.Memoize$MemoizeFunction.call(Memoize.java:136)
	at groovy.lang.Closure.call(Closure.java:412)
	at nextflow.scm.AssetManager.getManifest(AssetManager.groovy)
	at nextflow.scm.AssetManager.getMainScriptName(AssetManager.groovy:415)
	at nextflow.scm.AssetManager.checkValidRemoteRepo(AssetManager.groovy:373)
	at nextflow.scm.AssetManager.download(AssetManager.groovy:591)
	at nextflow.cli.CmdRun.getScriptFile0(CmdRun.groovy:591)
	at nextflow.cli.CmdRun.getScriptFile(CmdRun.groovy:524)
	at nextflow.cli.CmdRun.run(CmdRun.groovy:326)
	at nextflow.cli.Launcher.run(Launcher.groovy:513)
	at nextflow.cli.Launcher.main(Launcher.groovy:673)
Sept.-29 11:51:04.607 [main] DEBUG nextflow.scm.RepositoryProvider - Request [credentials -:-] -> https://api.github.com/repos/nf-core/differentialabundance/contents/main.nf
Sept.-29 11:51:04.638 [main] DEBUG nextflow.scm.RepositoryProvider - Response status: 403 -- {"message":"API rate limit exceeded for 129.143.130.248. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)","documentation_url":"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting"}

Sept.-29 11:51:04.653 [main] DEBUG nextflow.cli.Launcher - Operation aborted
nextflow.exception.RateLimitExceededException: API rate limit exceeded -- Provide your GitHub user name and password to get a higher rate limit
	at nextflow.scm.RepositoryProvider.checkResponse(RepositoryProvider.groovy:244)
	at nextflow.scm.RepositoryProvider.invoke(RepositoryProvider.groovy:193)
	at nextflow.scm.RepositoryProvider.memoizedMethodPriv$invokeAndParseResponseString(RepositoryProvider.groovy:301)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
	at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:645)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:628)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethodSafe(InvokerHelper.java:82)
	at nextflow.scm.RepositoryProvider$_closure3.doCall(RepositoryProvider.groovy)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
	at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:280)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)
	at groovy.lang.Closure.call(Closure.java:433)
	at org.codehaus.groovy.runtime.memoize.Memoize$MemoizeFunction.lambda$call$0(Memoize.java:137)
	at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:137)
	at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:113)
	at org.codehaus.groovy.runtime.memoize.Memoize$MemoizeFunction.call(Memoize.java:136)
	at groovy.lang.Closure.call(Closure.java:422)
	at nextflow.scm.RepositoryProvider.invokeAndParseResponse(RepositoryProvider.groovy)
	at nextflow.scm.GithubRepositoryProvider.readBytes(GithubRepositoryProvider.groovy:117)
	at nextflow.scm.RepositoryProvider.validateFor(RepositoryProvider.groovy:328)
	at nextflow.scm.AssetManager.checkValidRemoteRepo(AssetManager.groovy:374)
	at nextflow.scm.AssetManager.download(AssetManager.groovy:591)
	at nextflow.cli.CmdRun.getScriptFile0(CmdRun.groovy:591)
	at nextflow.cli.CmdRun.getScriptFile(CmdRun.groovy:524)
	at nextflow.cli.CmdRun.run(CmdRun.groovy:326)
	at nextflow.cli.Launcher.run(Launcher.groovy:513)
	at nextflow.cli.Launcher.main(Launcher.groovy:673)
